namespace Custom.IO
{
    /// <summary>
    /// Class   :   "TabStack"
    /// 
    /// Purpose :   provides a helper class that handles adding tabs to strings for formatting text in ascii files.
    /// </summary>
    public class TabStack
    {
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Data Members.
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        int count = 0;


        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Properties.
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets the string of tabs generated by this stack.
        /// </summary>
        string tabString
        {
            get
            {
                string szTabs = "";
                for (int i = 0; i < count; i++)
                    szTabs += '\t';
                return szTabs;
            }
        }


        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Functions.
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Operator++ overload. Adds a tab to the tab stack.
        /// </summary>
        /// <param name="tStack">The stack.</param>
        /// <returns>The stack.</returns>
        public static TabStack operator ++(TabStack tStack)
        {
            tStack.count++;
            return tStack;
        }

        /// <summary>
        /// Operator-- overload. Removes a tab to the tab stack.
        /// </summary>
        /// <param name="tStack">The stack.</param>
        /// <returns>The stack.</returns>
        public static TabStack operator --(TabStack tStack)
        {
            tStack.count--;
            if (tStack.count < 0)
                tStack.count = 0;
            return tStack;
        }

        /// <summary>
        /// Returns the string of tabs on the stack.
        /// </summary>
        /// <returns>The string of tabs on the stack.</returns>
        public override string ToString()
        {
            return tabString;
        }
    }
}
